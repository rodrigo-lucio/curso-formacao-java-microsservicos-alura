spring:
  application:
    name: pagamento-service
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://banco-postgres:5432/pagamento?useTimezone=true&serverTimezone=UTC
    username: postgres
    password: postgres
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQL95Dialect
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

eureka:
  instance:
    instance-id: ${spring.application.name}:${random.value}
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
server:
  port: 1234

resilience4j:
  circuitbreaker:
    instances:
      confirmarPagamentoAtualizaPedido:
        slidingWindowSize: 3  # Baseado nas ultimas 3 requsições vai fazer a estatística para mudar para o aberto/fechado
        minimumNumberOfCalls: 2 # Mínimo de chamadas que tem que fazer até o circuit breaker entrar em açao.
        waitDurantionInOpenState: 50s # Tempo que o circuit breaker vai ficar aberto

